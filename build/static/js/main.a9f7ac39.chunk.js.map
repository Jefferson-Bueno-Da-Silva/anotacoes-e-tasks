{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","id","tarefa","finalizada","tarefas","setarTarefas","useEffect","undefined","window","localStorage","getItem","JSON","parse","modal","setModal","marcarConcluida","novasTarefas","filter","val","setItem","stringify","className","type","onClick","document","getElementById","Date","getTime","value","salvarTarefa","map","style","textDecoration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uQA0GeA,MAvGf,WAAgB,IAAD,EAEmBC,mBAAS,CACvC,CACEC,GAAG,EACHC,OAAO,wBACPC,YAAY,GAEd,CACEF,GAAG,EACHC,OAAO,wBACPC,YAAY,KAXH,mBAENC,EAFM,KAEGC,EAFH,KAgBbC,qBAAU,gBAEqCC,GAA1CC,OAAOC,aAAaC,QAAQ,YAC7BL,EAAaM,KAAKC,MAAMJ,OAAOC,aAAaC,QAAQ,eAEtD,IArBW,MAuBaV,oBAAS,GAvBtB,mBAuBNa,EAvBM,KAuBCC,EAvBD,KAmDPC,EAAkB,SAACd,GACvB,IAAIe,EAAeZ,EAAQa,QAAO,SAASC,GAIzC,OAHGA,EAAIjB,IAAMA,IACXiB,EAAIf,YAAa,GAEZe,KAGTb,EAAaW,GACbR,OAAOC,aAAaU,QAAQ,UAAWR,KAAKS,UAAUJ,KAQxD,OACE,sBAAKK,UAAU,MAAf,UAEIR,EACA,qBAAKQ,UAAU,QAAf,SACE,sBAAKA,UAAU,eAAf,UACE,kDACA,uBAAOpB,GAAG,iBAAiBqB,KAAK,SAChC,wBAAQC,QAAS,kBAnDN,WAEnB,IAAIrB,EAASsB,SAASC,eAAe,kBAErCpB,EAAa,GAAD,mBACPD,GADO,CAEV,CACEH,IAAI,IAAIyB,MAAOC,UACfzB,OAAQA,EAAO0B,MACfzB,YAAY,MAIhBK,OAAOC,aAAaU,QAAQ,UAAWR,KAAKS,UAAL,sBAClChB,GADkC,CAErC,CACEH,IAAI,IAAIyB,MAAOC,UACfzB,OAAQA,EAAO0B,MACfzB,YAAY,OAIhBW,GAAS,GA6BsBe,IAAvB,yBAIJ,wBAEF,qBAAKN,QAAS,WAlBhBT,GAAUD,IAkB0BQ,UAAU,YAA5C,eACA,sBAAKA,UAAU,aAAf,UACE,uDAEEjB,EAAQ0B,KAAI,SAACZ,GACX,OAAqB,GAAlBA,EAAIf,WAEH,mBAAGoB,QAAS,kBAAMR,EAAgBG,EAAIjB,KAAtC,SAA4CiB,EAAIhB,SAIlD,mBAAGqB,QAAS,kBAAMR,EAAgBG,EAAIjB,KAAK8B,MAAO,CAACC,eAAgB,gBAAnE,SAAqFd,EAAIhB,mBCpFxF+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,SAM1BQ,M","file":"static/js/main.a9f7ac39.chunk.js","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\n\nfunction App() {\n\n  const [tarefas, setarTarefas] = useState([\n    {\n      id:0,\n      tarefa:'Minha tarefa do dia 1',\n      finalizada: false\n    },\n    {\n      id:1,\n      tarefa:'Minha tarefa do dia 2',\n      finalizada: true\n    }\n  ]);\n\n  //PARA COLOCAR ON-LINE:\n  useEffect(()=>{\n    //Fazer chamada para api e preencer o estado das tarefas\n    if(window.localStorage.getItem('tarefas') != undefined){\n      setarTarefas(JSON.parse(window.localStorage.getItem('tarefas')));\n    }\n  },[])\n\n  const [modal, setModal] = useState(false);\n\n  const salvarTarefa = () =>{\n    //TODO: SALVAR A TAREFA\n    var tarefa = document.getElementById('content-tarefa');\n\n    setarTarefas([\n      ...tarefas,\n      {\n        id: new Date().getTime(),\n        tarefa: tarefa.value,\n        finalizada: false\n      }\n    ]);\n\n    window.localStorage.setItem('tarefas', JSON.stringify([\n      ...tarefas,\n      {\n        id: new Date().getTime(),\n        tarefa: tarefa.value,\n        finalizada: false\n      }\n    ]));\n\n    setModal(false);\n\n  }\n\n  const marcarConcluida = (id) => {\n    let novasTarefas = tarefas.filter(function(val){\n      if(val.id == id){\n        val.finalizada = true\n      }\n      return val;\n    });\n\n    setarTarefas(novasTarefas);\n    window.localStorage.setItem('tarefas', JSON.stringify(novasTarefas));\n  }\n\n  const abrirModal = () => {\n    setModal(!modal);\n  }\n\n\n  return (\n    <div className=\"App\">\n      {\n        modal?\n        <div className=\"modal\">\n          <div className=\"modalContent\">\n            <h3>Adicionar tarefa</h3>\n            <input id=\"content-tarefa\" type=\"text\"/>\n            <button onClick={() => salvarTarefa()}>Salvar</button>\n          </div>\n        </div>\n        :\n        <div></div>\n      }\n      <div onClick={() => abrirModal()} className=\"addTarefa\">+</div>\n      <div className=\"boxTarefas\">\n        <h2>Minhas Tarefas do dia</h2>\n        {\n          tarefas.map((val)=>{\n            if(val.finalizada == false){\n              return(\n                <p onClick={() => marcarConcluida(val.id)}>{val.tarefa}</p>\n              );\n            }else{\n              return (\n              <p onClick={() => marcarConcluida(val.id)} style={{textDecoration: 'line-through'}}>{val.tarefa}</p>\n              );\n            }\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}